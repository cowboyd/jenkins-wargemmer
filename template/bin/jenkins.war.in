#!/usr/bin/env ruby

require 'optparse'
require 'ostruct'
require File.expand_path(File.dirname(__FILE__) + '/../lib/jenkins/war')




options = OpenStruct.new({
  :home => File.join(ENV['HOME'], ".jenkins", "server"),
  :port => 3001,
  :control => 3002,
  :daemon => false,
  :kill => false
})
parser = OptionParser.new
parser.banner = "Usage: jenkins.war server [options]"
parser.on("--home DIR", String, "use this directory to store server data") {|dir| options.home = dir}
parser.on("-p", "--port PORT", Integer, "run jenkins server on this port") {|port| options.port = port} 
parser.on("-c", "--control PORT", Integer, "set the shutdown/control port") {|control| options.control = control}
parser.on("--daemon") {options.daemon = true}
parser.on("-k", "--kill") {options.kill = true}
parser.on("--logfile PATH", String, "redirect log messages to this file") {|path| options.logfile = path}

help = proc do |cmd|
  help = Help.new(parser)
  if cmd && help.respond_to?(cmd)
    puts help.send(cmd)
  else
    puts "usage: jenkins.war COMMAND [OPTIONS]"
    puts "  jenkins.war help command"
    puts "  jenkins.war version"
    puts "  jenkins.war unpack DESTINATION"
    puts "  jenkins.war classpath"
    puts "  jenkins.war cp DESTINATION"
    puts "  jenkins.war server [OPTIONS]"
    puts ""
  end
end

class Help
  def initialize(server_options)
    @server_options = server_options
  end
  def help
    <<-HERE
Usage: jenkins.war help COMMAND
  shows help for the specified command
HERE
  end
  def version
    <<-HERE
Usage: jenkins.war version
  displays the version of jenkins represented by this war
HERE
  end
  def unpack
    <<-HERE
Usage: jenkins.war unpack DESTINATION
  unpack the jenkins war to directory at DESTINATION
HERE
  end
  def classpath
    <<-HERE
Usage: jenkins.war classpath
  return a classpath for jenkins core which can be used for a javac invocation
HERE
  end
  def cp
    <<-HERE
Usage: jenkins.war cp PATH
    copy the jenkins.war file to PATH
HERE
  end
  def location
    <<-HERE
Usage: jenkins.war location
  prints the actual location on the file system of the jenkins.war 
HERE
  end
  def server
    @server_options.to_s
  end
end


war = Jenkins::War
case cmd = ARGV.shift
when "version", "-v", "--version"
  puts war::VERSION
  exit
when 'unpack'
  dest = ARGV.first
  war.unpack(dest)
when 'classpath'
  puts war.classpath
when 'cp'
  dest = ARGV.first
  war.cp dest
when 'server'
  parser.parse(ARGV)
  war.server(options)
when "help", "-h", "--help"
  help[ARGV.first]
when "location"
  puts war::LOCATION
else
  help[nil]
end

